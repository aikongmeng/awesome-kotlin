/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.pojos


import java.io.Serializable
import java.time.OffsetDateTime

import jooq.main.enums.KugEventStatusEnum


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class KugEvent(
    var id: Long? = null,
    var created: OffsetDateTime? = null,
    var updated: OffsetDateTime? = null,
    var updatedBy: Long? = null,
    var status: KugEventStatusEnum? = null,
    var kugId: Long? = null,
    var title: String? = null,
    var latitude: Double? = null,
    var longitude: Double? = null,
    var version: Long? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: KugEvent = other as KugEvent
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.created == null) {
            if (o.created != null)
                return false
        }
        else if (this.created != o.created)
            return false
        if (this.updated == null) {
            if (o.updated != null)
                return false
        }
        else if (this.updated != o.updated)
            return false
        if (this.updatedBy == null) {
            if (o.updatedBy != null)
                return false
        }
        else if (this.updatedBy != o.updatedBy)
            return false
        if (this.status == null) {
            if (o.status != null)
                return false
        }
        else if (this.status != o.status)
            return false
        if (this.kugId == null) {
            if (o.kugId != null)
                return false
        }
        else if (this.kugId != o.kugId)
            return false
        if (this.title == null) {
            if (o.title != null)
                return false
        }
        else if (this.title != o.title)
            return false
        if (this.latitude == null) {
            if (o.latitude != null)
                return false
        }
        else if (this.latitude != o.latitude)
            return false
        if (this.longitude == null) {
            if (o.longitude != null)
                return false
        }
        else if (this.longitude != o.longitude)
            return false
        if (this.version == null) {
            if (o.version != null)
                return false
        }
        else if (this.version != o.version)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.created == null) 0 else this.created.hashCode())
        result = prime * result + (if (this.updated == null) 0 else this.updated.hashCode())
        result = prime * result + (if (this.updatedBy == null) 0 else this.updatedBy.hashCode())
        result = prime * result + (if (this.status == null) 0 else this.status.hashCode())
        result = prime * result + (if (this.kugId == null) 0 else this.kugId.hashCode())
        result = prime * result + (if (this.title == null) 0 else this.title.hashCode())
        result = prime * result + (if (this.latitude == null) 0 else this.latitude.hashCode())
        result = prime * result + (if (this.longitude == null) 0 else this.longitude.hashCode())
        result = prime * result + (if (this.version == null) 0 else this.version.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("KugEvent (")

        sb.append(id)
        sb.append(", ").append(created)
        sb.append(", ").append(updated)
        sb.append(", ").append(updatedBy)
        sb.append(", ").append(status)
        sb.append(", ").append(kugId)
        sb.append(", ").append(title)
        sb.append(", ").append(latitude)
        sb.append(", ").append(longitude)
        sb.append(", ").append(version)

        sb.append(")")
        return sb.toString()
    }
}
