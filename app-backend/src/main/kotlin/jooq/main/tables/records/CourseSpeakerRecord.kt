/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.records


import jooq.main.tables.CourseSpeaker

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CourseSpeakerRecord() : UpdatableRecordImpl<CourseSpeakerRecord>(CourseSpeaker.COURSE_SPEAKER) {

    open var courseId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var kotlinerId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Long?, Long?> = super.key() as Record2<Long?, Long?>

    /**
     * Create a detached, initialised CourseSpeakerRecord
     */
    constructor(courseId: Long? = null, kotlinerId: Long? = null): this() {
        this.courseId = courseId
        this.kotlinerId = kotlinerId
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CourseSpeakerRecord
     */
    constructor(value: jooq.main.tables.pojos.CourseSpeaker?): this() {
        if (value != null) {
            this.courseId = value.courseId
            this.kotlinerId = value.kotlinerId
            resetChangedOnNotNull()
        }
    }
}
