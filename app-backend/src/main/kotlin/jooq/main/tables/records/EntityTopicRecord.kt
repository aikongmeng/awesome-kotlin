/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.records


import java.time.OffsetDateTime

import jooq.main.tables.EntityTopic

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EntityTopicRecord() : TableRecordImpl<EntityTopicRecord>(EntityTopic.ENTITY_TOPIC) {

    open var entityId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var topic: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var created: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    /**
     * Create a detached, initialised EntityTopicRecord
     */
    constructor(entityId: Long? = null, topic: String? = null, created: OffsetDateTime? = null): this() {
        this.entityId = entityId
        this.topic = topic
        this.created = created
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EntityTopicRecord
     */
    constructor(value: jooq.main.tables.pojos.EntityTopic?): this() {
        if (value != null) {
            this.entityId = value.entityId
            this.topic = value.topic
            this.created = value.created
            resetChangedOnNotNull()
        }
    }
}
