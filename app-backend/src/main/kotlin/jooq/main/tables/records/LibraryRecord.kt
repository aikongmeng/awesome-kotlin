/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.records


import jooq.main.tables.Library

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class LibraryRecord() : UpdatableRecordImpl<LibraryRecord>(Library.LIBRARY) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var title: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised LibraryRecord
     */
    constructor(id: Long? = null, title: String? = null): this() {
        this.id = id
        this.title = title
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised LibraryRecord
     */
    constructor(value: jooq.main.tables.pojos.Library?): this() {
        if (value != null) {
            this.id = value.id
            this.title = value.title
            resetChangedOnNotNull()
        }
    }
}
