/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.records


import java.time.OffsetDateTime

import jooq.main.tables.Repository

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RepositoryRecord() : TableRecordImpl<RepositoryRecord>(Repository.REPOSITORY) {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var description: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var version: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var created: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var updated: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    /**
     * Create a detached, initialised RepositoryRecord
     */
    constructor(name: String? = null, description: String? = null, version: Long? = null, created: OffsetDateTime? = null, updated: OffsetDateTime? = null): this() {
        this.name = name
        this.description = description
        this.version = version
        this.created = created
        this.updated = updated
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised RepositoryRecord
     */
    constructor(value: jooq.main.tables.pojos.Repository?): this() {
        if (value != null) {
            this.name = value.name
            this.description = value.description
            this.version = value.version
            this.created = value.created
            this.updated = value.updated
            resetChangedOnNotNull()
        }
    }
}
